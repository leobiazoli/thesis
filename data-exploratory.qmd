---
title: "Exploratory data analysis"
bibliography: references.bib
editor_options: 
  chunk_output_type: console
format:
  html:
    code-fold: true
    code-tools: true
---

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: load-pck
library(tidyverse)
library(readr)
library(dplyr)
library(lubridate)
library(tidyr)
library(stringr)
library(kableExtra)
library(rmarkdown)
library(tibble)
library(DescTools)
library(kableExtra)
library(readxl)
library(dplyr)
```


```{r}
#| message: false
#| warning: false
#| label: avg-aut
load(file = "data_proj.rda")
```

## Propensity Score Matching - PSM

```{r}
#| message: false
#| warning: false
#| echo: false
#| label: gen2

df_pre <- data_proj |>
  filter(groups_c %in% c("3", "4")) |>
  arrange(author_id, publication_year) |>
  group_by(author_id) |>
  mutate(previous_country = lag(country_year_pub, order_by = publication_year)) |>
  mutate(change_year = if_else(country_year_pub != previous_country & !is.na(previous_country), publication_year, NA_real_)) |>
  group_by(author_id) |>
  mutate(first_change_year = min(change_year, na.rm = TRUE)) |>
  ungroup() |>
  mutate(period = if_else(publication_year < first_change_year, 0, 1)) |>
  select(-previous_country, -change_year)

df_pre2 <- df_pre |>
  group_by(author_id) |> # antes agrupava por "period"
  summarise(
    n_articles = round(n_distinct(eid), 2),
    n_citations = round(sum(cit_standard), 2),
    n_countries = round(n_distinct(country_year_pub), 2),
    mean_citation = round(mean(cit_standard), 2),
    mean_sjr = round(mean(SJR),2),
    age = max(time_pub),
    groups = unique(groups_c),
    collab = round(mean(foreign_country), 2),
    first_publication = min(publication_year, na.rm = TRUE),
    last_publication = max(publication_year, na.rm = TRUE),
    career_age = last_publication - first_publication
  ) |>
  mutate(mean_sjr = ifelse(is.na(mean_sjr), mean(mean_sjr, na.rm = TRUE), mean_sjr)) |>
  mutate(period = 1) # antes sem isso 

df_pre0 <- data_proj |>
  filter(groups_c == "1") |>
  group_by(author_id) |>
  summarise(
    n_articles = round(n_distinct(eid), 2),
    n_citations = round(sum(cit_standard), 2),
    n_countries = round(n_distinct(country_year_pub), 2),
    mean_citation = round(mean(cit_standard), 2),
    mean_sjr = round(mean(SJR),2),
    age = max(time_pub),
    groups = unique(groups_c),
    collab = round(mean(foreign_country), 2),
    first_publication = min(publication_year, na.rm = TRUE),
    last_publication = max(publication_year, na.rm = TRUE),
    career_age = last_publication - first_publication
  ) |> 
  mutate(mean_sjr = ifelse(is.na(mean_sjr), mean(mean_sjr, na.rm = TRUE), mean_sjr)) |> # comentar esse
  mutate(period = 0, groups = "0") 

teste_psm <- df_pre0 |>
  full_join(df_pre2) |>
  mutate(mean_sjr = replace_na(mean_sjr, 0))

psm_emig <- teste_psm |>
  filter(groups != "4") 

library(MatchIt)

#row.names(psm_emig) = psm_emig$author_id

model_teste1 = matchit(period ~ n_articles + career_age + collab, method = "nearest", data = psm_emig, ratio = 1, caliper = 0.1) # mean_citation + mean_sjr

pards1 = match.data(model_teste1)

cov = c("n_articles", "career_age", "collab")

#lapply(cov, function(v){
 # t.test(pards1[[v]] ~ pards1$period)})

# Estimando efeito de tratamento ------------------------------------------

# with(pards1, t.test(mean_citation ~ period))
# with(pards1, t.test(mean_sjr ~ period))

# RETURN MIGRANT-------------------------------------------------------
psm_ret <- teste_psm |>
  filter(groups != "3")

model_teste2 = matchit(period ~ n_articles + career_age + collab, method = "nearest", data = psm_ret, ratio = 1, caliper = 0.1) # mean_citation + mean_sjr

pards2 = match.data(model_teste2)

cov = c("n_articles", "career_age", "collab")

# lapply(cov, function(v){
  # t.test(pards2[[v]] ~ pards2$period)})

# Estimando efeito de tratamento ------------------------------------------

# with(pards2, t.test(mean_citation ~ period))
# with(pards2, t.test(mean_sjr ~ period))

```

### Emigrant

```{r}
#| message: false
#| warning: false
#| label: psm1
df_pre_t <- df_pre |>
  #mutate(SJR = replace_na(SJR, 0)) |>
  group_by(author_id, period) |> 
  summarise(
    mean_citation_before = round(mean(cit_standard), 2),
    mean_sjr_before = round(mean(SJR),2)
  ) |> filter(period == 0) |>
  select(-period)

teste_psm_t <- teste_psm |>
  left_join(df_pre_t, by = "author_id")

teste_psm_t2 <- teste_psm_t |>
  mutate(
    mean_citation_before = ifelse(is.na(mean_citation_before), mean_citation, mean_citation_before),
    mean_sjr_before = ifelse(is.na(mean_sjr_before), mean_sjr, mean_sjr_before)
  )

psm_emig_t <- teste_psm_t2 |>
  filter(groups != "4") #|>
  #filter(is.na(mean_citation_before)) |> view()

# PSM test
model_teste1_t = matchit(period ~ n_articles + career_age + collab + mean_citation_before + mean_sjr_before, method = "nearest", data = psm_emig_t, ratio = 1, caliper = 0.1) 

summary(model_teste1_t)

pards1_t = match.data(model_teste1_t)

cov_t = c("n_articles", "career_age", "collab", "mean_citation_before", "mean_sjr_before")

#lapply(cov_t, function(v){
 # t.test(pards1_t[[v]] ~ pards1_t$period)})

# ATT ------------------------------------------

with(pards1_t, t.test(mean_citation ~ period))
with(pards1_t, t.test(mean_sjr ~ period))
```

### Return Migrant

```{r}
#| message: false
#| warning: false
#| label: psm2
psm_ret_t <- teste_psm_t2 |>
  filter(groups != "3")

model_teste2_t = matchit(period ~ n_articles + career_age + collab + mean_citation_before + mean_sjr_before, method = "nearest", data = psm_ret_t, ratio = 1, caliper = 0.1) 

summary(model_teste2_t)

pards2_t = match.data(model_teste2_t)

# ATT ------------------------------------------

with(pards2_t, t.test(mean_citation ~ period))
with(pards2_t, t.test(mean_sjr ~ period))

# Propensity score matching - balancing scores

mps = glm(period ~ n_articles + career_age + collab + mean_citation_before + mean_sjr_before, family = binomial(), 
          data = psm_ret_t)

ps_df = data.frame(p_s = predict(mps, type = "response"), 
                   afetadas = mps$model$period)

# Histogram of Propensity Score
labs = paste("Mobility:", c("yes", "no"))

ps_df %>%
  mutate(afetadas = ifelse(afetadas == 1, labs[1], labs[2])) %>%
  ggplot(aes(x=p_s)) + geom_histogram(color='white') +
  facet_wrap(~afetadas) + 
  xlab("Propensity Score") + 
  theme_classic()
```
