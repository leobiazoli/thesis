---
title: "Synthetic Control"
bibliography: references.bib
editor_options: 
  chunk_output_type: console
format:
  html:
    code-fold: true
    code-tools: true
---

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: load-pk
library(tidyverse)
library(readr)
library(purrr)
library(dplyr)
library(lubridate)
library(tidyr)
library(stringr)
library(janitor)
library(arrow)
library(kableExtra)
library(rmarkdown)
library(tibble)
library(DescTools)
library(gsynth)
#library(gtExtras)
# Matching algorithm
library(MatchIt)
```

## Introduction

```{r}
#| warning: false
#| message: false
#| echo: false
#| eval: false
#| label: introduc
data_final_up |>
  group_by(author_id, publication_year) |>
  summarise(
    n_articles = n_distinct(eid),
    n_citations = sum(cit_standard),
    n_countries = n_distinct(country_year_pub),
    mean_citation = mean(cit_standard),
    max_citation = max(cit_standard),
    groups = unique(groups_c),
    collab = sum(foreign_country)
  ) |> 
  paged_table()
```

Descriptive statistics of authors with publications from 2000 to 2020 in Brazil by groups of migratory movements (the groups were defined in Step 3 in Data Organization[^1]):

[^1]: Classification of authors into groups:

    0)  single article researcher;
    1)  non-migrant researcher;
    2)  immigrant researcher;
    3)  emigrant researcher;
    4)  returning migrant researcher;
    5)  transient migrant researcher.

<!-- -->

- **General statistics by group**

```{r}
#| warning: false
#| message: false
#| label: intr
load(file = "data_final_up.rda")

data_final_up |>
  group_by(author_id, groups_c) |>
  summarise(collab = sum(foreign_country)) |>
  group_by(groups_c) |>
  summarise(mean_collab = round(mean(collab),2),
            sd_collab = round(sd(collab),2)) |> paged_table()

data_final_up |>
  group_by(groups_c) |>
  summarise(
    mean_citation = round(mean(cit_standard), 2),
    sd_citation = round(sd(cit_standard), 2),
    mean_sjr = round(mean(SJR, na.rm = T), 2),
    sd_sjr = round(sd(SJR, na.rm = T), 2),
    mean_collab = round(mean(foreign_country), 2),
    sd_collab = round(sd(foreign_country), 2),
    n_articles = n_distinct(eid),
    n = n_distinct(author_id)
  ) |> paged_table()
```

```{r}
#| warning: false
#| message: false
#| echo: false
#| eval: false
# **(2) Publications by group and year**
data_final_up |>
  group_by(publication_year, groups_c) |>
  summarise(articles = n_distinct(eid)) |>
  ggplot(aes(x = publication_year, y = articles)) +
  geom_bar(stat = "identity", fill = "navy") +  
  labs(x = "Publication year", 
       y = "Number of articles") +
  theme_classic() +
  facet_wrap(~ groups_c, scales = "free_y") 
```

```{r}
#| warning: false
#| message: false
#| echo: false
#| eval: false
# **Citation statistics by group**
data_final_up |>
  distinct(eid, groups_c, cit_standard) |>
  group_by(groups_c) |>
  summarise(mean_citation = mean(cit_standard),
            median_citation = median(cit_standard),
            min_citation = min(cit_standard),
            max_citation = max(cit_standard),
            sd_citation = sd(cit_standard)) |>
  mutate(group_label = case_when(
    groups_c == '0' ~ 'Single article',
    groups_c == '1' ~ 'Non-migrant',
    groups_c == '2' ~ 'Immigrant',
    groups_c == '3' ~ 'Emigrant',
    groups_c == '4' ~ 'Returning migrant',
    TRUE ~ 'Transient migrant'
  )) |>
  paged_table()
```

## Data preparation for causal inference models

To adjust the causal inference models, the data was grouped by author (`author_id`) and year (`publication_year`) in `data_prep`.

```{r}
#| eval: false
#| warning: false
#| message: false
#| label: prep
# 1.307.391 obs and 12 vars
data_prep <- data_final_up |>
  group_by(author_id, publication_year) |>
  summarise(n_articles = n_distinct(eid),
            n_countries = n_distinct(country_year_pub),
            n_citations = sum(cit_standard),
            citation_mean = mean(cit_standard),
            citation_max = max(cit_standard),
            sjr_mean = mean(SJR),
            sjr_max = max(SJR),
            groups = unique(groups_c),
            collab = sum(foreign_country),
            country2 = list(country_year_pub))

data_prep <- data_prep |>
  mutate(
    # Para cada linha, escolha o primeiro país diferente de "Brazil", se existir
    country = sapply(country2, function(x) {
      countries <- unlist(strsplit(x, ", "))  # Divide a lista de países em vetores
      selected_country <- countries[countries != "Brazil"]  # Seleciona países diferentes de "Brazil"
      if (length(selected_country) > 0) {
        return(selected_country[1])  # Retorna o primeiro país diferente de "Brazil"
      } else {
        return(countries[1])  # Se não houver, retorna o primeiro país (que é "Brazil")
      }
    })
  ) |>
  select(-c(country2))

data_prep |>
  group_by(author_id, publication_year) |>
  filter(n() == 1) |> view()

save(data_prep, file = "data_prep.rda")

data_prep |>
  group_by(groups) |>
  summarise(authors = n_distinct(author_id))

data_prep2 <- data_prep |>
  filter(groups != "0") |>
  group_by(author_id) |>
  mutate(year_count = n_distinct(publication_year)) |>
  filter(year_count > 1) |>
  ungroup() |>
  select(-year_count) 

data_models <- data_prep2 |>
  group_by(publication_year) |>
  mutate(citations_winsorized = Winsorize(citation_mean, probs = c(0, 0.99))) |>
  mutate(sjr_winsorized = Winsorize(sjr_mean, probs = c(0, 0.99), na.rm = T))

save(data_models, file = "data_models.rda")
```

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: data
load(file = "data_models.rda")
```

## Synthetic Control

The synthetic control method is an approach used in non-randomized experiments to construct a synthetic trajectory of the variable of interest based on a weighted average of units unaffected by the treatment. In this study, we will use non-migrant authors to estimate the effects of international academic mobility on two groups of researchers: emigrants (those who left Brazil and did not return) and return migrants (those who spent a period abroad before returning to Brazil).

The classic synthetic control approach assumes a single treatment period, which does not align with the data used in this study. Therefore, we will use the generalized synthetic control approach to account for multiple treatment periods (years of migration from Brazil). The years of migration considered span from 2010 to 2016, focusing on researchers with international academic mobility during this period. Additionally, a pre-selection of the sample was conducted to use only the researchers most similar to the treated researchers as control units. This pre-selection employed propensity score matching (PSM) to reduce the sample size and improve the estimates of counterfactuals.

- **Variables of interest:** citations, SJR, and research collaboration.

- **Treatment:** year of international mobility (between 2010 and 2016).

- **Control units:** researchers matched via PSM (who were not treated).

The results are presented by type of mobility (emigrant and return migrant) and variable of interest.

### Emigrant researchers

- **Citations**

```{r}
#| warning: false
#| message: false
#| eval: false
#| label: scm-cit-emig
df_g3_4 <- data_models |>
  filter(groups == "3") |> 
  arrange(author_id, publication_year) |>
  group_by(author_id) |>
  mutate(previous_country = lag(country, order_by = publication_year)) |>
  mutate(change_year = if_else(country != previous_country & !is.na(previous_country), publication_year, NA_real_)) |>
  group_by(author_id) |>
  mutate(first_change_year = min(change_year, na.rm = TRUE)) |>
  ungroup() |>
  mutate(period = if_else(publication_year < first_change_year, "Before Change", "After Change")) |>
  select(-previous_country, -change_year) |>
  filter(first_change_year %in% c(2010:2016)) |> 
  mutate(treat = case_when(
    period == 'Before Change' ~ 0,
    TRUE ~ 1
  )) |>
  select(-c(first_change_year, period)) |>
  mutate(treat_psm = 1)
  
df_g1_4 <- data_models |>
  filter(groups == "1") |>
  mutate(treat = 0) |>
  mutate(treat_psm = 0) 

teste_scm7 <- df_g1_4 |>
  full_join(df_g3_4) |>
  mutate(sjr_winsorized = replace_na(sjr_winsorized, 0)) |>
  mutate(sjr_mean = replace_na(sjr_mean, 0))

teste_scm7_2 <- teste_scm7 |>
  filter(publication_year <= 2009)

# propensity score matching
df_nomiss_t <- teste_scm7_2 |>
  select(publication_year, treat, collab, sjr_winsorized, n_articles, n_citations, citations_winsorized, author_id, treat_psm) |>
  filter(publication_year > 2000) |>
  na.omit()

model_teste = matchit(treat_psm ~ collab + citations_winsorized + sjr_winsorized + n_articles, method = "nearest", data = df_nomiss_t, ratio = 1)

pards1_teste = match.data(model_teste)

authors_psm_t <- pards1_teste |>
  pull(author_id)

data_psm_teste <- teste_scm7 |>
  filter(author_id %in% authors_psm_t) |>
  filter(publication_year > 2000)

out7_t <- gsynth(citations_winsorized ~ treat + collab + sjr_winsorized, 
              data = data_psm_teste,  index = c("author_id","publication_year"),
              estimator = "mc", nlambda = 5,
              se = T, inference = "nonparametric", # se = TRUE inf = parametric
              r = c(0, 5), CV = T, force = "unit", # CV = T
              parallel = TRUE, min.T0 = 5, 
              nboots = 100, seed = 02139) # nboots = 1000

# save(out7_t, file = "out7_t.rda")
```

```{r}
#| warning: false
#| message: false
#| label: scm-cit-emig2
load(file = "out7_t.rda")

plot(out7_t, type = "gap")

plot(out7_t, type = "counterfactual", raw = "none", main="", ylab = "Citations")

out7_t$est.att

# cummulative effect
cumu1 <- cumuEff(out7_t, cumu = TRUE, id = NULL)
cumu1$est.catt
```

- **SJR**

```{r}
#| warning: false
#| message: false
#| eval: false
#| label: scm-sjr-emig
out7_t2 <- gsynth(sjr_winsorized ~ treat + collab + citations_winsorized,
              data = data_psm_teste,  index = c("author_id","publication_year"),
              estimator = "mc", nlambda = 5,
              se = T, inference = "nonparametric", # se = TRUE inf = parametric
              r = c(0, 5), CV = T, force = "unit", # CV = T
              parallel = TRUE, min.T0 = 5, 
              nboots = 100, seed = 02139) # nboots = 1000
```

```{r}
#| warning: false
#| message: false
#| label: scm-sjr-emig2
load(file = "out7_t2.rda")

plot(out7_t2, type = "gap")

plot(out7_t2, type = "counterfactual", raw = "none", main="", ylab = "SJR")

round(out7_t2$est.att, 2)

# cummulative effect
cumu2 <- cumuEff(out7_t2, cumu = TRUE, id = NULL)
cumu2$est.catt
```

- **Collaboration**

```{r}
#| warning: false
#| message: false
#| eval: false
#| label: scm-col-emig
out7_t3 <- gsynth(collab ~ treat + sjr_winsorized + citations_winsorized,
              data = data_psm_teste,  index = c("author_id","publication_year"),
              estimator = "mc", nlambda = 5,
              se = T, inference = "nonparametric", # se = TRUE inf = parametric
              r = c(0, 5), CV = T, force = "unit", # CV = T
              parallel = TRUE, min.T0 = 5, 
              nboots = 100, seed = 02139) # nboots = 1000

data_psm_teste |> # data_psm_teste
  group_by(groups) |>
  summarise(n = n_distinct(author_id))

save(out7_t3, file = "out7_t3.rda")

round(sd(out7_t3$Y.bar[1:9,1]), 2) # media antes da intervencao
round(sd(out7_t3$Y.bar[10:20,1]), 2) # media apos intervencao
```

```{r}
#| warning: false
#| message: false
#| label: scm-col-emig2
load(file = "out7_t3.rda")

plot(out7_t3, type = "gap", main = "")

plot(out7_t3, type = "counterfactual", raw = "none", main="", ylab = "Collaborations")

```

### Return migrant researchers

- **Citations**

```{r}
#| warning: false
#| message: false
#| eval: false
#| label: scm-cit-mig
df_g4_4 <- data_models |>
  filter(groups == "4") |> 
  arrange(author_id, publication_year) |>
  group_by(author_id) |>
  mutate(previous_country = lag(country, order_by = publication_year)) |>
  mutate(change_year = if_else(country != previous_country & !is.na(previous_country), publication_year, NA_real_)) |>
  group_by(author_id) |>
  mutate(first_change_year = min(change_year, na.rm = TRUE)) |>
  ungroup() |>
  mutate(period = if_else(publication_year < first_change_year, "Before Change", "After Change")) |>
  select(-previous_country, -change_year) |>
  filter(first_change_year %in% c(2010:2016)) |> # coment c(2010:2015)
  mutate(treat = case_when(
    period == 'Before Change' ~ 0,
    TRUE ~ 1
  )) |>
  select(-c(first_change_year, period)) |>
  mutate(treat_psm = 1)
  
teste_scm8 <- df_g1_4 |>
  full_join(df_g4_4) |>
  mutate(sjr_winsorized = replace_na(sjr_winsorized, 0)) |>
  mutate(sjr_mean = replace_na(sjr_mean, 0))

teste_scm8_2 <- teste_scm8 |>
  filter(publication_year <= 2009)

df_nomiss2 = teste_scm8_2 |>
  select(publication_year, treat, collab, sjr_winsorized, n_articles, n_citations, citations_winsorized, author_id, treat_psm) |>
  filter(publication_year > 2000) |>
  na.omit()

model2 = matchit(treat_psm ~ collab + citations_winsorized + n_articles + sjr_winsorized, method = "nearest", data = df_nomiss2, ratio = 1) 

summary(model2)

pards2 = match.data(model2)

authors_psm2 <- pards2 |>
  pull(author_id)

data_psm2 <- teste_scm8 |>
  filter(author_id %in% authors_psm2) |>
  filter(publication_year > 2000)

aut <- out8[["id.tr"]]

data_psm3 <- data_psm2 |>
  filter((treat == 1 & author_id %in% aut)|
           (treat == 0 & author_id %in% authors_psm2))

out8_t <- gsynth(citations_winsorized ~ treat + collab + sjr_winsorized, 
              data = data_psm2,  index = c("author_id","publication_year"), 
              estimator = "mc", lambda = 0.10, # nlambda = 5
              se = T, inference = "nonparametric", 
              r = 0, CV = F, force = "unit", 
              parallel = TRUE, min.T0 = 5, 
              nboots = 100, seed = 02139)

save(out8_t, file = "out8_t.rda")
```

```{r}
#| warning: false
#| message: false
#| label: scm-cit-mig2
load(file = "out8_t.rda")

plot(out8_t, type = "gap", main = "")

plot(out8_t, type = "counterfactual", raw = "none", main="", ylab = "Citations")

```

- **SJR**

```{r}
#| warning: false
#| message: false
#| eval: false
#| label: scm-sjr-mig
out8_2 <- gsynth(sjr_winsorized ~ treat + collab + citations_winsorized, 
              data = data_psm2,  index = c("author_id","publication_year"), 
              estimator = "mc", lambda = 0.4216965, # 0.4216965
              se = T, inference = "nonparametric", 
              r = 0, CV = F, force = "unit", 
              parallel = TRUE, min.T0 = 5, 
              nboots = 100, seed = 02139)

save(out8_2, file = "out8_2.rda")

# out8_2 <- gsynth(sjr_winsorized ~ treat + collab + citations_winsorized, # + n_articles + n_citations,
#               data = data_psm,  index = c("author_id","publication_year"), 
#               se = T, inference = "parametric", # se = TRUE
#               r = c(0, 5), CV = F, force = "two-way", 
#               parallel = TRUE, min.T0 = 6, 
#               nboots = 100, seed = 02139)
```

```{r}
#| warning: false
#| message: false
#| label: scm-sjr-mig2
load(file = "out8_2.rda")

plot(out8_2, type = "gap")

plot(out8_2, type = "counterfactual", raw = "none", main="", ylab = "SJR")
```


- **Collaboration**

```{r}
#| warning: false
#| message: false
#| eval: false
#| label: scm-col-mig
out8_3 <- gsynth(collab ~ treat + citations_winsorized + sjr_winsorized, 
              data = data_psm2,  index = c("author_id","publication_year"), 
              estimator = "mc", lambda = 0.17783, # nlambda = 5
              se = T, inference = "nonparametric", 
              r = 0, CV = F, force = "unit", 
              parallel = TRUE, min.T0 = 5, 
              nboots = 100, seed = 02139)

save(out8_3, file = "out8_3.rda")
```

```{r}
#| warning: false
#| message: false
#| label: scm-col-mig2
load(file = "out8_3.rda")

plot(out8_3, type = "gap")

plot(out8_3, type = "counterfactual", raw = "none", main="", ylab = "Collaborations")

```


```{r}
#| warning: false
#| message: false
#| eval: false
# descriptive statistics - TABLE 2 (ARTICLE SCM)
data_final_up <- data_final_up |>
  group_by(publication_year) |>
  mutate(citations_winsorized = Winsorize(cit_standard, probs = c(0, 0.99))) |>
  mutate(sjr_winsorized = Winsorize(SJR, probs = c(0, 0.99), na.rm = T))

data_final_up |>
  group_by(groups_c) |>
  summarise(
    mean_citation = round(mean(citations_winsorized), 2),
    sd_citation = round(sd(citations_winsorized), 2),
    mean_sjr = round(mean(sjr_winsorized, na.rm = T), 2),
    sd_sjr = round(sd(sjr_winsorized, na.rm = T), 2),
    #mean_collab = round(mean(collab), 2),
    #sd_collab = round(sd(collab), 2),
    n_articles = n_distinct(eid),
    n = n_distinct(author_id)
  ) |> kable("pipe")

teste_scm7 |>
  filter(publication_year < 2010) |>
  group_by(treat_psm) |>
  summarise(cit = round(mean(citations_winsorized), 2),
            sjr = round(mean(sjr_winsorized), 2),
            col = round(mean(collab), 2),
            aut = n_distinct(author_id)) |> kable("pipe")

data_psm_teste |>
  filter(publication_year < 2010) |>
  group_by(treat_psm) |>
  summarise(cit = round(mean(citations_winsorized), 2),
            sjr = round(mean(sjr_winsorized), 2),
            col = round(mean(collab), 2),
            aut = n_distinct(author_id)) |> kable("pipe")

df_g3_5n |>
  filter(publication_year == 2000) |>
  select(publication_year, SJR, author_id) |> view()
  #summarise(m = mean(SJR, na.rm = T))
  plot()

plot(out9, type = "counterfactual", raw = "all")
```
